/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/Vuc2uhVhuIR
 */
import { AvatarImage, AvatarFallback, Avatar } from "@/components/ui/avatar"
import { DropdownMenuTrigger, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuItem, DropdownMenuContent, DropdownMenu } from "@/components/ui/dropdown-menu"
import { CardTitle, CardDescription, CardHeader, CardContent, Card } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { ResponsiveLine } from "@nivo/line"

import { TableHead, TableRow, TableHeader, TableCell, TableBody, Table } from "@/components/ui/table"
import { Swiper, SwiperSlide } from 'swiper/react';
// Import Swiper styles
import 'swiper/css';
import 'swiper/css/navigation';
import { Navigation } from 'swiper/modules';
import './Studentui.css'
import Dropdown from "./dropdown"
import cardAssessmentData from '../../assets/data.json'
import classroomData from '../../assets/classroomdata.json'
import Logo from '../../assets/Logo/logo.png'
import gsap from "gsap"
import { useGSAP } from "@gsap/react"
import { ScrollTrigger } from "gsap/ScrollTrigger"
gsap.registerPlugin(ScrollTrigger)
import { useRef } from "react"
import { Link } from "react-router-dom"

export default function Studentui() {
   
  const links =useRef(null);
  const logoRef=useRef(null);
  const CardRef=useRef(null);
  const classroomRef=useRef(null);
  const assessmentref=useRef(null);
  const leaderboardRef=useRef(null)


  useGSAP(()=>{
      var tl=gsap.timeline();
      tl.from(links.current,{
        
       x:-500,
       duration:0.5,
       stagger:0.3
        
      })

      tl.from(logoRef.current,{
        y:-200,
        opacity:0,
        duration:0.5,
        stagger:0.3
      })
      tl.from(CardRef.current,{
       x:-200,
        opacity:0,
        duration:0.5,
        stagger:0.3
      })
      tl.from(classroomRef.current,{
        y:100,
        opacity:0,
        duration:0.5,
        stagger:0.3
      })

      tl.from(assessmentref.current,{
        y:100,
        opacity:0,
        duration:0.5,
        stagger:0.3
      })
      tl.from(leaderboardRef.current,{
        y:100,
        opacity:0,
        duration:0.5,
        stagger:0.3
      })
  })
   
  
  return (
    (<div className="flex flex-col h-screen bg-gray-100 dark:bg-gray-800">
      
       
      
      <div className="flex flex-1 overflow-hidden">
     
      <aside
          className="w-16 bg-[#040404] min-h-screen flex flex-col items-center py-4 space-y-4 px-24 "  >

            <div className="flex flex-col items-center">
            <img className="h-36 w-48 object-cover border rounded-[50%] border-[#82717c] cursor-pointer" src={Logo}  alt="" ref={logoRef} />
              <div className="flex flex-col justify-start gap-6 mt-8"  ref={links}>

            <a 
              className="flex items-center gap-2 px-3 py-2 text-white rounded dark:hover:bg-gray-700"
              href="#studentdetails"
             
              >
              {/* <FlagIcon className="hover:text-white  text-[#A8ABBA] h-8 w-8 " /> Home */}
              <HomeIcon className="w-6 h-6 text-blue-500" />
              <span className="text-[#A8ABBA]  hover:text-[#ECF0F1]">Home</span>
              
            </a>
            <a
              className="flex items-center gap-2 px-3 py-2 text-white rounded dark:hover:bg-gray-700"
              href="#completedcourses"
              
              >
              {/* <LayoutDashboardIcon className=" h-6 w-6 hover:text-white  text-[#A8ABBA]" /> */}
              <SchoolIcon className="w-6 h-6 text-green-500" />
              <span className="text-[#A8ABBA]  hover:text-[#ECF0F1]">Classroom</span>
            </a>
            
            <a
              className="flex items-center gap-2 px-3 py-2 text-white rounded dark:hover:bg-gray-700"
              href="#upcomingassessments"
              
              >
              {/* <SettingsIcon className=" h-6 w-6 hover:text-white  text-[#A8ABBA]" /> */}
              <ActivityIcon className="w-6 h-6 text-red-500" />
              <span className="text-[#A8ABBA]  hover:text-[#ECF0F1]">Assessment</span>
            </a>
             
                 
           
            <a
              className="flex items-center gap-2 px-3 py-2 text-white rounded dark:hover:bg-gray-700"
              href="#analyticsboard"
              
              >
               {/* <SignalIcon className=" h-6 w-6 hover:text-white  text-[#A8ABBA] " /> */}
               <PieChartIcon className="w-6 h-6 text-yellow-500" />
               <span className="text-[#A8ABBA] hover:text-[#ECF0F1]">Analytics</span>
            </a>

            </div>
           
          </div>

          
        
        </aside>
       

        <main className="flex-1 p-4 overflow-auto bg-[#fff] text-[#040404]">
          <header
             className="flex items-center h-16 mb-8 dark:bg-gray-900">
             <nav className="flex items-center justify-between w-full">
              <div className="flex items-center space-x-4">
            {/* <LayoutDashboardIcon className="w-6 h-6" /> */}
            <span className="text-xl font-semibold px-32 py-2 bg-[#040404] text-[#B3CCC2] rounded-md ">Student Dashboard</span>
            
           </div>


           <DropdownMenu>
        <DropdownMenuTrigger asChild>
        <Avatar className="h-9 w-9">
        <AvatarImage alt="User avatar" src="https://imgs.search.brave.com/J0ixr3aHGA8aitBrET8u4exc5KcrQl8PWXGrvAdsUY4/rs:fit:500:0:0/g:ce/aHR0cHM6Ly9mcmVl/c3ZnLm9yZy9pbWcv/YWJzdHJhY3QtdXNl/ci1mbGF0LTQucG5n" />
        {/* <AvatarFallback>JD</AvatarFallback> */}
       </Avatar>
        </DropdownMenuTrigger>
        <DropdownMenuContent>
          <DropdownMenuSeparator />
          <DropdownMenuItem>
            <a className="flex items-center gap-2" href="#">
              <UserIcon className="w-4 h-4" />
              John Doe
            </a>
          </DropdownMenuItem>
          <DropdownMenuItem>
            <a className="flex items-center gap-2" href="#">
              <MailIcon className="w-4 h-4" />
              ums@gmail.com
            </a>
          </DropdownMenuItem>
          <DropdownMenuSeparator />
          <DropdownMenuItem>
            <a className="flex items-center gap-2" href="#">
              <LogOutIcon className="w-4 h-4" />
              Logout
            </a>
          </DropdownMenuItem>
        </DropdownMenuContent>
      </DropdownMenu> 

          </nav>
         </header>
          <section className="mb-8" id="studentdetails" ref={CardRef}>
            <h2 className="mb-2 text-2xl font-bold">Student Details</h2>
            
            <div className="grid grid-cols-1 gap-2 md:grid-cols-2">
            <Card className="p-2 bg-[#ECF0F1] shadow-lg flex justify-between items-center">
              <div>
              <CardHeader>
                <CardTitle>John Doe</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid gap-1">
                  <div><span className="text-[#111129] font-bold">Registered ID</span>: CS102</div>
                  <div><span className="text-[#111129] font-bold">Mail ID</span>: ums@gmail.com</div>
                </div>
              </CardContent>
              </div>
              <div className="w-[100px] h-[100px] mx-20">
                <img  src="https://imgs.search.brave.com/J0ixr3aHGA8aitBrET8u4exc5KcrQl8PWXGrvAdsUY4/rs:fit:500:0:0/g:ce/aHR0cHM6Ly9mcmVl/c3ZnLm9yZy9pbWcv/YWJzdHJhY3QtdXNl/ci1mbGF0LTQucG5n" alt="" />
              </div>
            </Card>
          </div>
          </section>

    <section className="mb-8" id="completedcourses">
      <h2 className="mb-2 text-2xl font-bold">Class Rooms</h2>

           
      <Swiper navigation={true} modules={[Navigation]} className="px-3 py-3 mySwiper"
       slidesPerView={3}
       spaceBetween={30}
       ref={classroomRef}
      >
      {classroomData.map((card,index)=>(
        <SwiperSlide className=" rounded-[50px]" key={index}>
        <Card className="p-4 bg-[#EEFCEF] shadow-lg w-[100%] rounded-[30px]" >
          <CardHeader>
            <CardTitle>{card.title}</CardTitle>
            <CardDescription>{card.description}</CardDescription>
          </CardHeader>
          <Link to="/detailspage"><Button className="mt-4 bg-[#040404] text-[#B3CCC2] hover:bg-[#B3CCC2] hover:text-[#040404]">View Details</Button></Link>
        </Card>
    </SwiperSlide>
      ))}
         
      </Swiper>

          </section>
          <section className="mb-8" id="upcomingassessments" >
            <h2 className="mb-2 text-2xl font-bold">Upcoming Assessments</h2>
           
           
      <Swiper navigation={true} modules={[Navigation]} className="px-3 py-3 mySwiper"
       slidesPerView={3}
       spaceBetween={30}
       ref={assessmentref}
       
      >
        {cardAssessmentData.map((card, index) => (
        <SwiperSlide key={index} className="rounded-[50px]">
          <Card className="p-4 bg-[#E6F5FA] shadow-lg w-[100%] rounded-[30px]">
            <CardHeader>
              <CardTitle>{card.title}</CardTitle>
              <CardDescription>{card.description}</CardDescription>
            </CardHeader>
            <br />
            <Link to='/instructionpage'> <Button className="  bg-[#040404] text-[#B3CCC2] hover:bg-[#B3CCC2] hover:text-[#040404]">Start</Button></Link>
           
          </Card>
        </SwiperSlide>
      ))}
       
        
      </Swiper>

            </section>

         
      <div className="flex gap-7" ref={leaderboardRef}>
         <section className="flex-1 mb-6" id="analyticsboard">
          <div className="flex gap-9">
            <h2 className="mb-2 text-2xl font-bold">Analytics Board</h2>
          
            <Dropdown/>
          </div>
         
          
          <br/>
          <div className="grid grid-cols-1 gap-4">
            
            <LineChart className="w-full h-[300px]" />
          </div>
        </section>
        <section className="flex-1 mb-8" id="leaderboard">
          <div className="flex gap-9">
            <h2 className="mb-2 text-2xl font-bold">Leader Board</h2>
          
            <Dropdown/>
          </div>
          <br/>
            <Table>
              <TableHeader>
                <TableRow className="bg-[#ECF0F1]">
                  <TableHead className="text-[#111129]">Rank</TableHead>
                  <TableHead className="text-[#111129]">Name</TableHead>
                  <TableHead className="text-right text-[#111129]">Score</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody className="bg-[#040404] text-[#B3CCC2]">
                <TableRow>
                  <TableCell>1</TableCell>
                  <TableCell>John deep</TableCell>
                  <TableCell className="text-right">100</TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>2</TableCell>
                  <TableCell>John paul</TableCell>
                  <TableCell className="text-right">90</TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>3</TableCell>
                  <TableCell>Bob smith </TableCell>
                  <TableCell className="text-right">80</TableCell>
                </TableRow>
                <TableRow>
                <TableCell>4</TableCell>
                <TableCell>John Smith </TableCell>
                <TableCell className="text-right">70</TableCell>
              </TableRow>
              </TableBody>
            </Table>
            <Button className="mt-4  bg-[#040404] text-[#B3CCC2] hover:bg-[#B3CCC2] hover:text-[#040404] mx-auto md:ml-auto">View More</Button>
          </section>



      </div>

         
           
         
        </main>
      </div>
    </div>)
  );
}

function ActivityIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M22 12h-4l-3 9L9 3l-3 9H2" />
    </svg>
  )
}


function HomeIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" />
      <polyline points="9 22 9 12 15 12 15 22" />
    </svg>
  )
}


function PieChartIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M21.21 15.89A10 10 0 1 1 8 2.83" />
      <path d="M22 12A10 10 0 0 0 12 2v10z" />
    </svg>
  )
}


function SchoolIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m4 6 8-4 8 4" />
      <path d="m18 10 4 2v8a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-8l4-2" />
      <path d="M14 22v-4a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v4" />
      <path d="M18 5v17" />
      <path d="M6 5v17" />
      <circle cx="12" cy="9" r="2" />
    </svg>
  )
}




// function LayoutDashboardIcon(props) {
//   return (
//     (<svg
//       {...props}
//       xmlns="http://www.w3.org/2000/svg"
//       width="24"
//       height="24"
//       viewBox="0 0 24 24"
//       fill="none"
//       stroke="currentColor"
//       strokeWidth="2"
//       strokeLinecap="round"
//       strokeLinejoin="round">
//       <rect width="7" height="9" x="3" y="3" rx="1" />
//       <rect width="7" height="5" x="14" y="3" rx="1" />
//       <rect width="7" height="9" x="14" y="12" rx="1" />
//       <rect width="7" height="5" x="3" y="16" rx="1" />
//     </svg>)
//   );
// }


// function BarChart(props) {
//   return (
//     (<div {...props}>
//       <ResponsiveBar
//         data={[
//           { name: "Week1", count: 111 },
//           { name: "Week2", count: 157 },
//           { name: "Week3", count: 129 },
//           { name: "Week4", count: 150 },
//         ]}
//         keys={["count"]}
//         indexBy="name"
//         margin={{ top: 0, right: 0, bottom: 40, left: 40 }}
//         padding={0.3}
//         colors={["#2563eb"]}
//         axisBottom={{
//           tickSize: 0,
//           tickPadding: 16,
//         }}
//         axisLeft={{
//           tickSize: 0,
//           tickValues: 4,
//           tickPadding: 16,
//         }}
//         gridYValues={4}
//         theme={{
//           tooltip: {
//             chip: {
//               borderRadius: "9999px",
//             },
//             container: {
//               fontSize: "12px",
//               textTransform: "capitalize",
//               borderRadius: "6px",
//             },
//           },
//           grid: {
//             line: {
//               stroke: "#f3f4f6",
//             },
//           },
//         }}
//         tooltipLabel={({ id }) => `${id}`}
//         enableLabel={false}
//         role="application"
//         ariaLabel="A bar chart showing data" />
//     </div>)
//   );
// }


function LineChart(props) {
  return (
    (<div {...props}>
      <ResponsiveLine
        data={[
          {
            id: "Desktop",
            data: [
              { x: "Jan", y: 43 },
              { x: "Feb", y: 137 },
              { x: "Mar", y: 61 },
              { x: "Apr", y: 145 },
              { x: "May", y: 26 },
              { x: "Jun", y: 154 },
            ],
          },
          // {
          //   id: "Mobile",
          //   data: [
          //     { x: "Jan", y: 60 },
          //     { x: "Feb", y: 48 },
          //     { x: "Mar", y: 177 },
          //     { x: "Apr", y: 78 },
          //     { x: "May", y: 96 },
          //     { x: "Jun", y: 204 },
          //   ],
          // },
        ]}
        margin={{ top: 10, right: 10, bottom: 40, left: 40 }}
        xScale={{
          type: "point",
        }}
        yScale={{
          type: "linear",
        }}
        axisTop={null}
        axisRight={null}
        axisBottom={{
          tickSize: 0,
          tickPadding: 16,
        }}
        axisLeft={{
          tickSize: 0,
          tickValues: 5,
          tickPadding: 16,
        }}
        colors={["#82717C", ""]}
        pointSize={6}
        useMesh={true}
        gridYValues={6}
        theme={{
          tooltip: {
            chip: {
              borderRadius: "9999px",
            },
            container: {
              fontSize: "12px",
              textTransform: "capitalize",
              borderRadius: "6px",
            },
          },
          grid: {
            line: {
              stroke: "#f3f4f6",
            },
          },
        }}
        role="application" />
    </div>)
  );
}


function UserIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2" />
      <circle cx="12" cy="7" r="4" />
    </svg>)
  );
}


function MailIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <rect width="20" height="16" x="2" y="4" rx="2" />
      <path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" />
    </svg>)
  );
}



function LogOutIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4" />
      <polyline points="16 17 21 12 16 7" />
      <line x1="21" x2="9" y1="12" y2="12" />
    </svg>)
  );
}
